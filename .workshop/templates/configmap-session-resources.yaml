apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: configmap-session-resources
parameters:
- name: NAME_PREFIX
  value: ""
  required: false
- name: WORKSHOP_NAME
  value: ""
  required: true
- name: SPAWNER_NAMESPACE
  value: ""
  required: true
- name: SPAWNER_MODE
  value: "learning-portal"
  required: true
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME_PREFIX}${WORKSHOP_NAME}-session-resources
    labels:
      app: ${NAME_PREFIX}${WORKSHOP_NAME}
      spawner: ${SPAWNER_MODE}
      class: spawner
  data:
    extra_resources.yaml: |-
      kind: List
      apiVersion: v1
      items:
      - kind: ServiceAccount
        apiVersion: v1
        metadata:
          name: postgres-operator
      - kind: Role
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: pgo-role
        rules:
        - apiGroups:
          - ''
          - cr.client-go.k8s.io
          resources:
          - pgclusters
          - pgbackups
          - pgpolicies
          - pgreplicas
          - pgtasks
          - pgupgrades
          verbs:
          - "*"
        - apiGroups:
          - ''
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - "*"
        - apiGroups:
          - apps
          - extensions
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - "*"
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - "*"
      - kind: RoleBinding
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: pgo-role-binding
        subjects:
        - kind: ServiceAccount
          name: postgres-operator
          namespace: "${project_namespace}"
        roleRef:
          kind: Role
          apiGroup: rbac.authorization.k8s.io
          name: pgo-role
      - kind: ServiceAccount
        apiVersion: v1
        metadata:
          name: pgo-backrest
      - kind: Role
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: pgo-backrest-role
        rules:
        - apiGroups:
          - ''
          resources:
          - pods
          verbs:
          - get
          - list
        - apiGroups:
          - ''
          resources:
          - pods/exec
          verbs:
          - create
      - kind: RoleBinding
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: pgo-backrest-role-binding
        subjects:
        - kind: ServiceAccount
          name: pgo-backrest
          namespace: "${project_namespace}"
        roleRef:
          kind: Role
          apiGroup: rbac.authorization.k8s.io
          name: pgo-backrest-role

